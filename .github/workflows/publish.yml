name: "publish"

on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

jobs:
  publish-tauri-android:
    name: Publish Android
    runs-on: "ubuntu-latest"
    env:
      NDK_VERSION: "27.2.12479018"
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install Rust Stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install Cargo B(inary)Install
        uses: cargo-bins/cargo-binstall@main

      - name: Install Trunk
        run: cargo binstall trunk

      - name: Install WASM Rust Target
        run: rustup target add wasm32-unknown-unknown

      - name: Set Up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install Android NDK
        run: sdkmanager --install "ndk;${{ env.NDK_VERSION }}"

      - name: Install Android Rust Targets
        run: rustup target add aarch64-linux-android armv7-linux-androideabi i686-linux-android x86_64-linux-android

      - name: Setup Tauri CLI
        run: npm install -g @tauri-apps/cli@latest

      - name: Run Tauri Build
        env:
          NDK_HOME: /usr/local/lib/android/sdk/ndk/${{ env.NDK_VERSION }}
        run: npx tauri android build

      - uses: SebRollen/toml-action@v1.2.0
        id: read_toml
        with:
          file: "gui/Cargo.toml"
          field: "package.version"

      - name: Release to Github
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: Release ${{ steps.read_toml.outputs.value }}
          files: "gui/src-tauri/gen/android/app/build/outputs/apk/**/*.apk"

  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "MacOS ARM"
            platform: "macos-latest"
            build_args: "--target aarch64-apple-darwin"
            build_files: "target/**/bundle/**/*.dmg"
          - name: "MacOS x64"
            platform: "macos-latest"
            build_args: "--target x86_64-apple-darwin"
            build_files: "target/**/bundle/**/*.dmg"
          - name: "Ubuntu"
            platform: "ubuntu-latest"
            build_args: ""
            build_files: "target/**/bundle/**/*.deb"
          - name: "Windows"
            platform: "windows-latest"
            build_args: ""
            build_files: |
              "target/**/bundle/**/*.exe"
              "target/**/bundle/**/*.msi"

    name: "Publish ${{ matrix.name }}"
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install Rust Stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install Cargo B(inary)Install
        uses: cargo-bins/cargo-binstall@main

      - name: Install Trunk
        run: cargo binstall trunk

      - name: Install Dependencies (Ubuntu Only)
        if: matrix.name == 'Ubuntu'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libasound2-dev

      - name: Install WASM Rust Target
        run: rustup target add wasm32-unknown-unknown

      - name: Run Tauri Build
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: "./gui"
          args: ${{ matrix.build_args }}

      - uses: SebRollen/toml-action@v1.2.0
        id: read_toml
        with:
          file: "gui/Cargo.toml"
          field: "package.version"

      - name: Release to Github
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: Release ${{ steps.read_toml.outputs.value }}
          files: ${{ matrix.build_files }}
