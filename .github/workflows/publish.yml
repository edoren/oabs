name: "publish"

on:
  workflow_dispatch:
  push:
    tags:
      - "v*.*.*"

# This workflow will trigger on each push to the `release` branch to create or update a GitHub release, build your app, and upload the artifacts to the release.

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "MacOS ARM"
            platform: "macos-latest"
            args: "--target aarch64-apple-darwin"
          - name: "MacOS x64"
            platform: "macos-latest"
            args: "--target x86_64-apple-darwin"
          - name: "Android"
            platform: "ubuntu-latest"
            args: ""
          - name: "Ubuntu"
            platform: "ubuntu-latest"
            args: ""
          - name: "Windows"
            platform: "windows-latest"
            args: ""

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install Rust Stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Install Dependencies (Ubuntu Only)
        if: matrix.name == 'Ubuntu'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf libasound2-dev

      - uses: jetli/trunk-action@v0.5.0
        with:
          version: "latest"

      - name: Install WASM Rust Target
        run: rustup target add wasm32-unknown-unknown

      - name: Set Up JDK 17 (Android Only)
        if: matrix.name == 'Android'
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"

      - name: Setup Android SDK (Android Only)
        if: matrix.name == 'Android'
        uses: android-actions/setup-android@v3

      - name: Install Android NDK (Android Only)
        if: matrix.name == 'Android'
        run: sdkmanager --install "ndk;27.2.12479018"

      - name: Install Android Rust Targets (Android Only)
        if: matrix.name == 'Android'
        run: rustup target add aarch64-linux-android armv7-linux-androideabi i686-linux-android x86_64-linux-android

      - name: Setup Tauri CLI (Android Only)
        if: matrix.name == 'Android'
        run: npm install -g @tauri-apps/cli@latest

      - name: Run Tauri (Android Only)
        if: matrix.name == 'Android'
        env:
          NDK_HOME: /usr/local/lib/android/sdk/ndk/27.2.12479018
        run: npx tauri android build --split-per-abi

      - uses: tauri-apps/tauri-action@v0
        if: matrix.name != 'Android'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          projectPath: "./gui"
          # tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          # releaseName: "App v__VERSION__"
          # releaseBody: "See the assets to download this version and install."
          # releaseDraft: true
          # prerelease: false
          args: ${{ matrix.args }}
